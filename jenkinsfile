
pipeline{
  agent any

  environment {
        registryCredentials = "nexus"
        registry = "192.168.100.47:8083"
        imageName = "nodemongoapp"
        imageTag = "6.0"
    }
   
  stages {

 stage('Checkout Code') {
            steps {
                script {
                    git branch: 'main', url: 'https://github.com/Aymenjallouli/Devops.git'
                    sh 'ls -l'  // Vérifier si les fichiers sont bien présents
                }
            }
        }
  stage('Install dependencies') {
      steps{
        
        script {
         sh('npm install')
        }
      }
    }

stage('Unit Test') {
      steps{
        
        script {
         sh('npm test')
        }
      }
    }

    stage('SonarQube Analysis') {
      steps{
      script {  
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                    sh "${scannerHome}/bin/sonar-scanner"
                        }
                } 
              }  
            }

stage('Build application') {
      steps{
        
        script {
         sh('npm run build-dev')
        }
      }
    }



 stage('Building images (node and mongo)') {
      steps{
        
        script {
         sh('docker-compose build')
        }
      }
    }




   stage('Deploy  to Nexus') {
            steps {
                script {
                    docker.withRegistry("http://$registry", registryCredentials) {
                        sh "docker push $registry/$imageName:$imageTag"
                    }
                }
            }
        }

    stage('Run application') {
            steps {
                script {
                    docker.withRegistry("http://$registry", registryCredentials) {
                        sh "docker pull $registry/$imageName:$imageTag"
                        sh "docker-compose up -d"
                    }
                }
            }
        }

        stage("Run Prometheus"){
      steps{
 
        script{

        sh('docker start prometheus')

        }
      }
    }
     stage("Run Grafana"){ 
      steps{

        script{
        sh('docker start grafana')
        }
      }
    }
  } 
}